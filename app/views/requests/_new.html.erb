<%= render :partial => 'build_form_js' %>
<%= render :partial => 'hiding_js' %>
<%#= render :partial => 'bs_js' %>

<%#= params %>
  <% if @request.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@request.errors.count, "error") %> prohibited this request from being saved:</h2>

      <ul>
      <% @request.errors.full_messages.each do |message| %>
        <li><%#= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
<div class='bs_container'>
    <div class='bs_title'><b><%= @info_content['title'] %></b></div>
    <div class='bs_desc'><p><%= raw @info_content['description'] %></p></div>
    <div class='bs_desc'>
    <p> 
        by <%= @info_content['meta']['author']%> (
        <a href="mailto:webmaster-bbcf@epfl.ch?subject=[BioScript]" >contact</a>,  
        <a href="https://github.com/bbcf/bsPlugins/tree/master/bsPlugins">code</a> 

        )
    </p>
    </div>
    <div class='bs_form'> 
        <%= form_for(@request, method: "post", remote: true, html: {multipart: true}) do |f|%>
            <% @form = f %>
            <table>
            <tbody>
            <% @list_fields = [] %>
            <% @info_content['in'].each do |form_el| %>
                <% @var = form_el %>
                <%# multiple are pushed in java script on adding file %>
                <% @list_fields.push(@var['id']) if !form_el['multiple'] %>
                <% template_name = 'field_' + form_el['type'] %>
                <% template_name = 'field_track' if form_el['type'] == 'userfile' or form_el['type'] == 'txt' # or form_el['type'] == 'file' %>
                <%# template_name = 'field_listing' if form_el['type'] == 'function'%>
                <%# template_name = 'field_list' if form_el['type'] == 'function' %>
                <% template_name += '_multiple' if form_el['multiple'] %>
                <%= render :partial => template_name %>
            <% end %>
            </tbody>
            </table>
            <%= f.hidden_field :plugin_id %>
            <%= f.hidden_field :user_id %>
	    <%= hidden_field_tag 'format', 'json' %>
	    <%= hidden_field_tag 'request[format]', 'json' %>
	        <%= f.hidden_field :service_id %>
            <%= hidden_field_tag :list_fields, @list_fields.to_json %>   
            <%#= button_to "submit", requests_path(:plugin_id =>  @plugin.id) %>
            <%# button_to "submit" %>
            <span id='submit_link'>Submit</span>
        <% end %>

   </div>

<%= javascript_tag do %>
    $(document).ready(function(){
        var list_fields = JSON.parse($('#list_fields').val());
        var info_content = <%= raw @info_content['in'].to_json %> ;

        $('#submit_link2').click(function(event){
            var h_validate = {rules: {}, messages: {}}
            $('#new_request').validate();
            alert('ha-ha!222');
            $('#new_request').submit();
        });
    });
<% end %>

<%= javascript_tag do %>
    $(document).ready(function(){
        $('#submit_link').click(function(event){
            $('#new_request').validate();
    
            // this values come from begining of bs.js
            // bs_url diferent for BS and HTS
            var bs_url = '<%= APP_CONFIG[:bioscript_server] %>';
            var fselector = 'div.bs_form'; //data.fselector;
            var fsizemax = 255; //data.fsizemax;
            var waitdiv = $('<div class="loading-wrap"><span class="triangle1"></span><span class="triangle2"></span><span class="triangle3"></span></div>');
            waitdiv.css('left', $(this).find('input').width() + 'px');
            waitdiv.css('top', -$(this).find('input').height() + 'px');
            $(this).append(waitdiv);
            /* build form data objet to upload files if any */
            var formData = new FormData();
            alert('2');
            var files = $(':file');
            for(var i = 0; i < files.length; i++) {
                var fid = files[i].name;
                var fs = files[i].files;
                for(var j=0;j<fs.length;j++){
                    var f = fs[j];
                    if(f){
                        // file size max
                        if (f.size > fsizemax * 1000000 ){
                            alert('File is too big. You cannot upload files greater than '+ fsizemax + ' Mo.');
                            $('.loading-wrap').remove();
                            return false;
                        }
                        formData.append(fid, f);
                    }
                }
            }
            alert('3');
            /* get data from form */
            var pdata = $('#new_request').serializeArray();
            // pdata - all the parameters
            alert('4');
            for (i = 0; i < pdata.length; i++) {
                formData.append(pdata[i].name, pdata[i].value);
            //    alert(pdata[i].name + '/' + pdata[i].value);
            }
            //breaks here if submit in HTSStation
            /*
            $.each(pdata, function(i, v){
               alert('formData:'+v.name + '/' + v.value);
               formData.append(v.name, v.value);
            });
        */
   //       formData.append('format', 'json');
            $(this).addClass('hidden');
            alert('5');
            //url = bs_url + 'request/new';
            /* submit query */
            // why url = /bioscript/requests  works for BS? 
            // var url =  $('#new_request').attr('action');
            var url = 'http://bbcf-serv03.epfl.ch/bioscript/requests';
           alert('url = ' + url);
          jQuery.ajax({
                    url: url,
	                type: "POST",
                    dataType: 'json',
                    contentType: false, //'multipart/form-data',
                    processData: false,
                    data: formData 
                }).done(function(h) {
			            alert('test');
			        //  alert(h.redirect_url)
                       // _incall($this, 'jsonp_callback', [h]);
                        alert(h.redirect_url);
                        window.location = h.redirect_url;
                    }).fail(function(error){
                        alert('error');
                       // fo.attr('disabled', false);
                        $('.loading-wrap').remove();
                        console.error("POST ERROR");
                        console.error(error);
                    }).always(function() {
                       alert( "ajax complete" );
                    });
              return true;
        });
    });
<% end %>

    <%# list_types = ['bam','track', 'userfile', 'txt', 'file'] %>
    <% list_types = ['bam','track', 'userfile', 'txt'] %>
    <%= javascript_tag do  %>
        <% @info_content['in'].select{|e| list_types.include?(e['type'])}.each do |form_el| %>
            <% field_name = form_el['id'] %>
            <% if @service %>
                <%= raw (form_el['multiple']) ? (0..1).to_a.map{|e| 'bs_init_triple_file_field("' + form_el['id'] +"Multi:#{e}:" + field_name + '", "text");'}.join("\n") : ("bs_init_triple_file_field('" + field_name + "', 'text');" ) %>
            <% else %> 
                <%= raw (form_el['multiple']) ? (0..1).to_a.map{|e| 'bs_init_file_field("' + form_el['id'] +"Multi:#{e}:" + field_name + '", "text");'}.join("\n") : ("bs_init_file_field('" + field_name + "', 'text');" ) %>
            <% end %> 
        <% end %>
    <% end %>


    <%= javascript_tag do%>
        <% @info_content['in'].each do |form_el| %>
            <% if form_el['mapping'] %>
                <%= raw ('twd_hiding_init("' + form_el['id'] + '", ' + form_el['mapping'].to_json + ');') %>
                <%#= raw ('twd_hiding_onchange("' + form_el['id'] + '");') %>
            <% end %>
        <% end %>
    <% end %>
</div>
