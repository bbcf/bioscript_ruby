<script type="text/javascript">
/**
 * This is a patched version of dynform.js from toscawidget, because some 
 * for loop are not understood by every browsers.
 */
/**
 * Hiding
 **/
function test(ctrl){
    var btn = document.getElementById(ctrl.id);
    alert("test!")
}

var twd_required_store = {};
var twd_mapping_store = {};
function twd_hiding_init(ctrl_id, mapping)
{
    twd_mapping_store[ctrl_id] = mapping;
    
    //for first initialization of the mapping
    my_ctrl = document.getElementById(ctrl_id);
    twd_hiding_onchange(my_ctrl, true);
}

function twd_hiding_onchange(ctrl, first)
{
    var is_vis = document.getElementById(ctrl.id+':container').style.display != 'none';
    var mapping = twd_mapping_store[ctrl.id];
    var parent_id = ctrl.id.substring(0, ctrl.id.lastIndexOf(':')+1);
    alert('begin: ' + ctrl.id)
    // Determine the selected value(s)
    var values = [];
    if(ctrl.tagName == 'INPUT' || ctrl.tagName == 'SELECT' || ctrl.tagName == 'TEXTAREA')
        values = [ctrl.type == 'checkbox' ? ctrl.checked : ctrl.value];
    else
        for(var i=0;; i++)
        {
            var cb = document.getElementById(ctrl.id+":"+i);
            if(!cb) break;
            if(cb.checked)
                values[values.length] = cb.value;
        }

    // Determine all the dependent controls that are visible
    var a, b;
    var visible = {};
    if(is_vis)
        for(a in mapping)
        {
            var match = 0;
            for(b in values) {
                alert('cycle: ' + a + ' ' + b)
                if(a == values[b])
                    match = 1;
            }
            if(match)
                for(b in mapping[a])
                    visible[mapping[a][b]] = 1;
        }

    // Set the visibility for all dependent controls, where this has changed
    for(a in mapping){
        var l = mapping[a];
        for(var j=0;j<l.length;j++)
        {
		    var b = l[j];
         //   alert('begin: ' + b + ' ' + visible[b]);
            var display = visible[b] ? '' : 'none';
		    var x = document.getElementById(parent_id+b+':container');
            //here
		    var field = document.getElementById(parent_id+b);
            if (first) {
                if (field && field.required)
                    alert('1: '+b + ' ' +field.required)
                    twd_required_store[b] = true;
            }
            //to here
            if(x.style.display != display)
            {
                 //here
                if (twd_required_store[b] && field){
                   field.required = visible[b] ? true : false;;
                   alert('2: b = ' +b + ', field = '+ field.id +', visible = ' + visible[b] + ', req: ' + field.required);
                }
                //to here
                x.style.display = display;
		        var x = document.getElementById(parent_id+b);
                if(x && x.id && twd_mapping_store[x.id]) {
                   alert('3: x = ' + x.id);
                    twd_hiding_onchange(x);
                   }
            }
        }
    }
}

function twd_hiding_listitem_onchange(ctrl)
{
    twd_hiding_onchange(document.getElementById(
            ctrl.id.substr(0, ctrl.id.lastIndexOf(':'))));
}


/***
 * Growing
 **/
function twd_grow_add(ctrl)
{
    var row_id = ctrl.id.substring(0, ctrl.id.lastIndexOf(':'));
    var id_prefix = row_id.substring(0, row_id.lastIndexOf(':')+1);
    //alert(ctrl + ", " + id_prefix);
    var next_num = parseInt(row_id.substr(row_id.lastIndexOf(':')+1)) + 1;
    if(document.getElementById(id_prefix + next_num))
        return;
    var del = document.getElementById(row_id + ':del');
    if(del) del.style.display = '';
    twd_grow_clone(id_prefix, next_num);
    
    //modify list_fields hidden field
    var list_fields = JSON.parse(document.getElementById('list_fields').value);
    id_suffix = ctrl.id.substring(ctrl.id.lastIndexOf(':'), ctrl.id.length);
    //add to list id of the previos element, which has value, not the new and empty one
    var num = next_num - 1;
    name = id_prefix + num  + id_suffix;
    check = false;
    for (var i in list_fields) {
        if (list_fields[i] == name) {
            check = true;
        }
    }
    if (!check) list_fields.push(name);
    document.getElementById('list_fields').value = JSON.stringify(list_fields);
}

function twd_grow_clone(id_prefix, next_num)
{
    var clone_node = document.getElementById(id_prefix + '0');
    var node = clone_node.cloneNode(true);
    var stemlen = id_prefix.length + 1;
    var new_prefix = id_prefix + next_num;
    var x = twd_get_all_nodes(node)
    for(var i = 0; i < x.length; i++)
    {
        if(x[i].name) x[i].name = new_prefix + x[i].name.substr(stemlen);
        if(x[i].id) x[i].id = new_prefix + x[i].id.substr(stemlen);
    }
    clone_node.parentNode.appendChild(node);
    node.style.display = '';
    
}

var twd_grow_undo_data = {};
function twd_grow_del(ctrl)
{
    var parent_id = ctrl.id.substring(0, ctrl.id.lastIndexOf(':'));
    var id_prefix = parent_id.substring(0, parent_id.lastIndexOf(':'));
    if(!twd_grow_undo_data[id_prefix]) twd_grow_undo_data[id_prefix] = [];
    twd_grow_undo_data[id_prefix].push(parent_id);
    document.getElementById(parent_id).style.display = 'none';
    document.getElementById(id_prefix + ':undo').style.display = '';
    //modify list_fields hidden field
    var par = document.getElementById(parent_id);
    var divs = par.getElementsByTagName( 'div' );
    var firstDiv = divs[ 0 ];
    id_suffix = firstDiv.id.substring(firstDiv.id.lastIndexOf(':'), firstDiv.id.length);
    var list_fields = JSON.parse(document.getElementById('list_fields').value);
    var index = list_fields.indexOf(parent_id + id_suffix);
    if (index > -1) {
        list_fields.splice(index, 1);
    }
    document.getElementById('list_fields').value = JSON.stringify(list_fields);
}

function twd_grow_undo(ctrl)
{
    var id_prefix = ctrl.id.substring(0, ctrl.id.lastIndexOf(':'));
    last_el = twd_grow_undo_data[id_prefix].pop();
    document.getElementById(last_el).style.display = '';
    if(!twd_grow_undo_data[id_prefix].length) ctrl.style.display = 'none';
    //modify list_fields hidden field
    var par = document.getElementById(last_el);
    var divs = par.getElementsByTagName( 'div' );
    var firstDiv = divs[ 0 ];
    var list_fields = JSON.parse(document.getElementById('list_fields').value);
    var check = false;
    for (var i in list_fields) {
        if (list_fields[i] == firstDiv.id) {
            check = true;
        }
    }
    if (!check) list_fields.push(firstDiv.id);
    document.getElementById('list_fields').value = JSON.stringify(list_fields);
}

/**
 * Link container
 **/
function twd_link_onchange(ctrl, link)
{
    var view = document.getElementById(ctrl.id + ':view')
    view.style.display = ctrl.value ? '' : 'none';
    view.href = link.replace(/\$/, ctrl.value)
}

/**
 * Utility functions
 **/
function twd_blank_deleted()
{
    for(var g in twd_grow_undo_data)
        for(var c in twd_grow_undo_data[g])
        {
            var x = twd_get_all_nodes(document.getElementById(twd_grow_undo_data[g][c]));
            for(var i = 0; i < x.length; i++)
                if(x[i].tagName == 'INPUT' || x[i].tagName == 'SELECT' || x[i].tagName == 'TEXTAREA')
                    x[i].value = '';
        }
}

function twd_get_all_nodes(elem)
{
    var ret = [elem];
    for(var node = elem.firstChild; node; node = node.nextSibling)
        ret = ret.concat(twd_get_all_nodes(node))
    return ret;
}

function twd_suppress_enter(evt) {
    var evt = (evt) ? evt : ((event) ? event : null);
    var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
    if (evt.keyCode == 13)  {return node.type == 'textarea';}
}

function twd_no_multi_submit(ctrl)
{
    return true; // TBD
    ctrl.disabled = 1;
    var form = document.getElementById(ctrl.id.substr(0, ctrl.id.lastIndexOf(":")));
    if(form.onsubmit) form.onsubmit();
    form.submit();
    return false;
}
</script>
